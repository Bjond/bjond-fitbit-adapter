/*  Copyright (c) 2016
 *  by Bjond, Inc., Boston, MA
 *
 *  This software is furnished under a license and may be used only in
 *  accordance with the terms of such license.  This software may not be
 *  provided or otherwise made available to any other party.  No title to
 *  nor ownership of the software is hereby transferred.
 *
 *  This software is the intellectual property of Bjond Health, Inc.,
 *  and is protected by the copyright laws of the United States of America.
 *  All rights reserved internationally.
 *
 */


apply plugin: 'findbugs'
apply plugin: 'eclipse'
apply plugin: 'groovy'
apply plugin: 'war'


// For the entire project
repositories {
    maven {url 'http://nexus.bjondhealth.com/nexus/content/groups/public'}
    maven {url 'http://nexus.bjondhealth.com/nexus/content/groups/private'}
}

defaultTasks 'assemble', 'war'


configurations {
    testManagedCompile { extendsFrom testCompile }
    testManagedRuntime { extendsFrom testRuntime }
}

dependencies {

    // Critial JSON Web Token RFC-7519 Implementation from Ping Identity.
    // https://bitbucket.org/b_c/jose4j/wiki/Home
    compile 'org.bitbucket.b_c:jose4j:0.5.0'
    testCompile 'org.bitbucket.b_c:jose4j:0.5.0'

    // Cryptography
    compile 'org.bouncycastle:bcprov-jdk15on:1.54'
    compile 'org.bouncycastle:bcprov-ext-jdk15on:1.54'
    compile 'org.apache.directory.studio:org.apache.commons.codec:1.8'

    // Resteasy client libraries
    providedCompile 'org.jboss.resteasy:resteasy-client:3.0.11.Final'
    providedCompile group: 'org.jboss.resteasy', name: 'resteasy-multipart-provider', version: '3.0.11.Final'

    testCompile 'org.jboss.resteasy:resteasy-client:3.0.11.Final'
    testCompile group: 'org.jboss.resteasy', name: 'resteasy-multipart-provider', version: '3.0.11.Final'

    testCompile 'junit:junit:4.12'

    compile 'org.apache.directory.studio:org.slf4j.log4j12:1.7.2'
    compile 'org.apache.logging.log4j:log4j:2.4.1'
    compile 'org.lable.rfc3881.auditlogger.adapter:slf4j:1.3'

    testCompile 'log4j:log4j:1.2.17'
    testCompile 'org.apache.directory.studio:org.slf4j.log4j12:1.7.2'
    testCompile 'org.apache.logging.log4j:log4j:2.4.1'
    testCompile 'org.lable.rfc3881.auditlogger.adapter:slf4j:1.3'

    
    // http://joel-costigliola.github.io/assertj/
    compile 'org.assertj:assertj-core:3.3.0'

    // Lombok
    compile 'org.projectlombok:lombok:1.16.6'
    testCompile 'org.projectlombok:lombok:1.16.6'

    compile 'javax.validation:validation-api:1.1.0.Final'

    providedCompile 'org.jboss.spec.javax.ejb:jboss-ejb-api_3.2_spec:1.0.0.Final'
    providedCompile 'org.jboss.spec.javax.annotation:jboss-annotations-api_1.2_spec:1.0.0.Final'
    providedCompile 'javax.enterprise:cdi-api:1.2'
    providedCompile 'javax.inject:javax.inject:1'

    
    /////////////////////////////////////////////////////////////////////////
    //                                Jackson                              //
    /////////////////////////////////////////////////////////////////////////
    compile 'com.fasterxml.jackson.core:jackson-annotations:2.4.1'
    compile 'com.fasterxml.jackson.core:jackson-core:2.4.1'
    compile 'com.fasterxml.jackson.core:jackson-databind:2.4.1'
    compile 'com.fasterxml.jackson.module:jackson-module-jaxb-annotations:2.4.1'
    compile 'com.fasterxml.jackson.jaxrs:jackson-jaxrs-xml-provider:2.4.1'
    compile 'com.fasterxml.uuid:java-uuid-generator:3.1.4'
    compile 'com.fasterxml.jackson.module:jackson-module-jsonSchema:2.4.1'
    
    // Apache Commons 
    compile 'org.apache.commons:commons-lang3:3.4'
    compile 'org.apache.commons:commons-math3:3.4.1'
    compile 'org.apache.directory.studio:org.apache.commons.io:2.4'
    compile 'commons-beanutils:commons-beanutils:1.9.2'

    // Findbugs
    compile'com.google.code.findbugs:findbugs:3.0.1'
    compile'com.google.code.findbugs:jsr305:3.0.0'
    compile'com.google.code.findbugs:annotations:3.0.0'

    // javax.json
    compile 'javax.json:javax.json-api:1.0'
    compile 'javax.ws.rs:javax.ws.rs-api:2.0'
        
    /// Jackson Module JsonSchema
    compile 'com.fasterxml.jackson.module:jackson-module-jsonSchema:2.3.0'

    /// JPA/Hibernate 
    compile 'org.hibernate:hibernate-core:4.3.10.Final'
    providedCompile group: 'org.jboss.spec', name: 'jboss-javaee-7.0', version: '1.0.1.Final'
    providedCompile group: 'org.hibernate.javax.persistence', name:'hibernate-jpa-2.1-api', version:'1.0.0.Final', transitive: true
    providedCompile 'javax.validation:validation-api:1.1.0.Final'
    providedCompile 'javax.transaction:jta:1.1'

    compile 'com.google.collections:google-collections:1.0-rc2'

    // Arquillian
    testCompile 'org.jboss.weld:weld-core:2.1.2.Final'
    testCompile 'org.jboss.arquillian:arquillian-bom:1.1.11.Final'    
    testCompile 'org.jboss.arquillian.junit:arquillian-junit-container:1.1.11.Final'
    testCompile 'org.apache.xalan:serializer:2.7.1-1.jbossorg'
    testCompile 'org.wildfly:wildfly-arquillian-container-managed:8.2.1.Final'
    testCompile 'org.wildfly:wildfly-spec-api:9.0.2.Final'
    
    // Maven Resolver for Arquillian Unit Tests.
    testCompile 'org.jboss.shrinkwrap.resolver:shrinkwrap-resolver-depchain:2.1.1'

    
}

/**
 * Grab the flyway library and jdbc driver for PostgreSQL. Needs to be done at
  * the script scope level.
 */
buildscript{
    repositories {
        maven {url 'http://nexus.bjondhealth.com/nexus/content/groups/public'}
    }
    dependencies{
        classpath 'org.flywaydb:flyway-gradle-plugin:3.2.1'
        classpath 'org.postgresql:postgresql:9.3-1100-jdbc41'
    }
}

apply plugin: 'java'
apply plugin: 'org.flywaydb.flyway'


flyway {
    url = "jdbc:postgresql://$System.env.FITBIT_ADAPTER_POSTGRESQL_DB_HOST:$System.env.FITBIT_ADAPTER_POSTGRESQL_DB_PORT/$System.env.FITBIT_ADAPTER_APP_NAME"
    user = "$System.env.FITBIT_ADAPTER_POSTGRESQL_DB_USERNAME"
    password = "$System.env.FITBIT_ADAPTER_POSTGRESQL_DB_PASSWORD"
    locations = ['classpath:db/migration']
    validateOnMigrate = true
}

// I want to see all deprecations.
// Set the proper encoding for Java compiler. Usually this isn't needed, but it is in the 
// OpenShift environment.
tasks.withType(JavaCompile) { 
    options.compilerArgs << "-Xlint:all" 
    options.compilerArgs << "-Xlint:-processing"
    options.compilerArgs << "-Xdiags:verbose" 
    options.encoding = 'UTF-8'
} 

war {

    archiveName = 'bjond-fitbit-adapter.war'
    
    // The jose4j  uses signed jars which will not match our manifest so I remove them.
    // http://stackoverflow.com/a/14441628/3038736
    exclude 'META-INF/*.RSA', 'META-INF/*.SF','META-INF/*.DSA'     
    
}


///////////////////////////////////////////////////////////////////////////////////////////////////////
// The html report can be found under /bjond-health/clients/server-core/build/reports/findbugs       //
// If you want an XML report that can be fed into the findbugs eclipse plugin set xml.enabled = true //
// and html.enabled = false. You can't have both true at the same time which is kinda stupid but     //
// there ya go.                                                                                      //
///////////////////////////////////////////////////////////////////////////////////////////////////////
tasks.withType(FindBugs) {
  reports {
      xml.enabled = false
      html.enabled = true
  }
}



task deploy (type: Copy) {
    outputs.upToDateWhen { false } // Always run if I invoke you.
    from './build/libs'
    into System.env.JBOSS_HOME + '/standalone/deployments'
    include '*.war'
}



// Makes emacs projects easier to manage. We used to have all targets on makefiles.
task all() {
  dependsOn  build, compileTestJava, findbugsMain, findbugsTest, deploy
}




/////////////////////////////////////////////////////////////////////////
//                       Build Version Information                     //
/////////////////////////////////////////////////////////////////////////
import org.apache.tools.ant.filters.ReplaceTokens


task filterVersion(type: Copy) {
 from './src/main/webapp/index.html'
 into './'
 
 // Use some of the filters provided by Ant
 filter(ReplaceTokens, tokens: [copyright: 'BjÃ¶nd Health, Inc. &copy; 2016', version: '0.0.1', buildstamp: new Date().toString() + " GIT Commit: "  + System.env.GIT_COMMIT])
 // Use a closure to filter each line
 filter { String line ->
     "$line"
 }
}

task removeVersion(type: Delete) {
 delete './index.html'
}


task replaceVersion(type: Copy) {
 from './index.html'
 into './src/main/webapp'
}


task buildstamp() {
 dependsOn filterVersion, replaceVersion, removeVersion
 replaceVersion.mustRunAfter filterVersion
 removeVersion.mustRunAfter replaceVersion
}


